//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CSubset.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICSubsetListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class CSubsetBaseListener : ICSubsetListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] CSubsetParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] CSubsetParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CSubsetParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CSubsetParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.varDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDeclaration([NotNull] CSubsetParser.VarDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.varDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDeclaration([NotNull] CSubsetParser.VarDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.varDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDeclarator([NotNull] CSubsetParser.VarDeclaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.varDeclarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDeclarator([NotNull] CSubsetParser.VarDeclaratorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.typeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeSpecifier([NotNull] CSubsetParser.TypeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.typeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeSpecifier([NotNull] CSubsetParser.TypeSpecifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] CSubsetParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] CSubsetParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.controlStructure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterControlStructure([NotNull] CSubsetParser.ControlStructureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.controlStructure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitControlStructure([NotNull] CSubsetParser.ControlStructureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] CSubsetParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] CSubsetParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] CSubsetParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] CSubsetParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] CSubsetParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] CSubsetParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.doWhileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoWhileStatement([NotNull] CSubsetParser.DoWhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.doWhileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoWhileStatement([NotNull] CSubsetParser.DoWhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] CSubsetParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] CSubsetParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.caseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseBlock([NotNull] CSubsetParser.CaseBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.caseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseBlock([NotNull] CSubsetParser.CaseBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] CSubsetParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] CSubsetParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] CSubsetParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] CSubsetParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.ioFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIoFunction([NotNull] CSubsetParser.IoFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.ioFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIoFunction([NotNull] CSubsetParser.IoFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.pointerManipulation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointerManipulation([NotNull] CSubsetParser.PointerManipulationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.pointerManipulation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointerManipulation([NotNull] CSubsetParser.PointerManipulationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.structDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDeclaration([NotNull] CSubsetParser.StructDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.structDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDeclaration([NotNull] CSubsetParser.StructDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.unionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnionDeclaration([NotNull] CSubsetParser.UnionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.unionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnionDeclaration([NotNull] CSubsetParser.UnionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.preprocessorDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessorDirective([NotNull] CSubsetParser.PreprocessorDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.preprocessorDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessorDirective([NotNull] CSubsetParser.PreprocessorDirectiveContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
